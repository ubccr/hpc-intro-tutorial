Let's take a closer look at the `gcc` module. GCC is an extremely widely used
C/C++/Fortran compiler. Tons of software is dependent on the GCC version, and
might not compile or run if the wrong version is loaded. In this case, there
are many different versions - for example `gcc/9.3.0` and `gcc/10.2.0`. How do we load multiple
copies and which copy is the default?

In this case, `gcc/10.2.0` has a `(D)` next to it. This indicates that it is the
default &mdash; if we type `module load gcc`, this is the copy that will be
loaded.

```
{{ site.remote.prompt }} module load gcc
{{ site.remote.prompt }} gcc --version
```
{: .language-bash}

```
gcc (GCC) 10.2.0
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

```
{: .output}

So how do we load the non-default copy of a software package? In this case, the
only change we need to make is be more specific about the module we are
loading. To load a non-default module, the only change we need to make to our `module load`
command is to leave in the version number after the `/`.

```
{{ site.remote.prompt }} module load gcc/8.3.0
{{ site.remote.prompt }} gcc --version
```
{: .language-bash}

```
The following have been reloaded with a version change:
  1) gcc/10.2.0 => gcc/8.3.0

```
{: .output}

We now have successfully switched from GCC 10.2.0 to GCC 8.3.0.
